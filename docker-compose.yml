version: '3.3'
 
services:

  artemis:
    image: vromero/activemq-artemis:latest-alpine
    container_name: activemq
    environment:
      ARTEMIS_USERNAME: banka
      ARTEMIS_PASSWORD: banka1234
    ports:
      - "61616:61616/tcp"
    profiles: ["all", "core"]

  redis:
    image: redis:7.0.1-alpine
    ports:
      - "6379:6379"
    profiles: ["all", "core"]

  db-user:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: postgres
    volumes:
      - db-user:/var/lib/postgresql/data
    profiles: ["all", "core"]

  db-berza:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: postgres
    volumes:
      - db-berza:/var/lib/postgresql/data
    profiles: ["all", "core"]

  db-racun:
    image: postgres
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: postgres
    volumes:
      - db-racun:/var/lib/postgresql/data
    profiles: [ "all", "core" ]

  db-mongo:
    image: mongo:4.2.21
    environment:
      MONGO_INITDB_ROOT_USERNAME: raf
      MONGO_INITDB_ROOT_PASSWORD: 12345678
      MONGO_INITDB_DATABASE: raf
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    profiles: [ "all", "core" ]

  db-influx:
    image: influxdb:2.1.1
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: raf
      DOCKER_INFLUXDB_INIT_PASSWORD: 12345678
      DOCKER_INFLUXDB_INIT_ORG: raf
      DOCKER_INFLUXDB_INIT_BUCKET: stocks
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: mytoken
    ports:
      - "8086:8086"
    volumes:
      - influx-data:/var/lib/influxdb2
      - influx-config:/etc/influxdb2
    profiles: ["all", "core", "influxdb"]

  influx-scrapper:
    image: ghcr.io/raf-si-2021/banka-influx-scrapper:latest
    build: ./InfluxScrapper
    env_file: .env
    ports:
      - "8000:80"
    links:
      - db-influx
    depends_on:
      - db-influx
    profiles: ["all", "core"]

  korisnicki-servis:
    image: ghcr.io/raf-si-2021/banka-user-service:latest
    build: ./user-service
    environment:
      spring.datasource.hikari.jdbcUrl: jdbc:postgresql://db-user:5432/postgres
      spring.activemq.broker-url: tcp://artemis:61616
    ports:
      - "8080:8080"
    links:
      - db-user
      - artemis
    depends_on:
      - db-user
      - artemis
    profiles: ["all"]

  email-servis:
    image: ghcr.io/raf-si-2021/banka-mail-service:latest
    build: ./mail-service
    env_file: .env
    environment:
      spring.activemq.broker-url: tcp://artemis:61616
    ports:
      - "8081:8081"
    links:
      - artemis
    depends_on:
      - artemis
    profiles: ["all"]

  berza:
    image: ghcr.io/raf-si-2021/banka-berza:latest
    build: ./berza
    env_file: .env
    environment:
      spring.datasource.hikari.jdbcUrl: jdbc:postgresql://db-berza:5432/postgres
      spring.redis.host: redis
      berza.influxscrapper.endpoint: http://influx-scrapper/
      berza.berze.csv: berze.csv
      berza.inflacije.csv: inflacije.csv
      berza.user-service-url: http://korisnicki-servis:8080/api/user
      berza.racun-service-url: http://racun-servis:8083/api/
    ports:
      - "8082:8082"
    links:
      - db-berza
      - influx-scrapper
    depends_on:
      - db-berza
      - influx-scrapper
    profiles: ["all"]

  racun-servis:
    image: ghcr.io/raf-si-2021/banka-racun-service:latest
    build: ./racun-service
    environment:
      spring.datasource.hikari.jdbcUrl: jdbc:postgresql://db-racun:5432/postgres
      racun.user-service-baseurl: http://korisnicki-servis:8080/
      racun.berza-service-baseurl: http://berza:8082/
      spring.data.mongodb.host: db-mongo
    ports:
      - "8083:8083"
    links:
      - db-racun
    depends_on:
      - db-racun
    profiles: [ "all" ]
    extra_hosts: # Required for integration tests
      - "host.docker.internal:host-gateway"

volumes:
  db-user:
  db-berza:
  db-racun:
  mongo-data:
  influx-data:
  influx-config:
